/* !---- DO NOT EDIT: This file autogenerated by com/jogamp/gluegen/opengl/GLEmitter.java on Thu Nov 01 02:15:46 CET 2012 ----! */

package jogamp.opengl.x11.glx;

import java.util.*;
import javax.media.opengl.*;
import javax.media.opengl.fixedfunc.*;
import jogamp.opengl.*;
import jogamp.nativewindow.x11.*;
import com.jogamp.gluegen.runtime.*;
import com.jogamp.common.os.*;
import com.jogamp.common.nio.*;
import java.nio.*;

public interface GLXExt {

  /** Part of <code>GLX_SGIS_multisample</code> */
  public static final int GLX_SAMPLE_BUFFERS_SGIS = 100000;
  /** Part of <code>GLX_SGIS_multisample</code> */
  public static final int GLX_SAMPLES_SGIS = 100001;
  /** Part of <code>GLX_SGIX_fbconfig</code> */
  public static final int GLX_WINDOW_BIT_SGIX = 0x00000001;
  /** Part of <code>GLX_SGIX_fbconfig</code> */
  public static final int GLX_PIXMAP_BIT_SGIX = 0x00000002;
  /** Part of <code>GLX_SGIX_fbconfig</code> */
  public static final int GLX_RGBA_BIT_SGIX = 0x00000001;
  /** Part of <code>GLX_SGIX_fbconfig</code> */
  public static final int GLX_COLOR_INDEX_BIT_SGIX = 0x00000002;
  /** Part of <code>GLX_SGIX_fbconfig</code> */
  public static final int GLX_DRAWABLE_TYPE_SGIX = 0x8010;
  /** Part of <code>GLX_SGIX_fbconfig</code> */
  public static final int GLX_RENDER_TYPE_SGIX = 0x8011;
  /** Part of <code>GLX_SGIX_fbconfig</code> */
  public static final int GLX_X_RENDERABLE_SGIX = 0x8012;
  /** Part of <code>GLX_SGIX_fbconfig</code> */
  public static final int GLX_FBCONFIG_ID_SGIX = 0x8013;
  /** Part of <code>GLX_SGIX_fbconfig</code> */
  public static final int GLX_RGBA_TYPE_SGIX = 0x8014;
  /** Part of <code>GLX_SGIX_fbconfig</code> */
  public static final int GLX_COLOR_INDEX_TYPE_SGIX = 0x8015;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_PBUFFER_BIT_SGIX = 0x00000004;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_BUFFER_CLOBBER_MASK_SGIX = 0x08000000;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_FRONT_LEFT_BUFFER_BIT_SGIX = 0x00000001;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_FRONT_RIGHT_BUFFER_BIT_SGIX = 0x00000002;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_BACK_LEFT_BUFFER_BIT_SGIX = 0x00000004;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_BACK_RIGHT_BUFFER_BIT_SGIX = 0x00000008;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_AUX_BUFFERS_BIT_SGIX = 0x00000010;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_DEPTH_BUFFER_BIT_SGIX = 0x00000020;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_STENCIL_BUFFER_BIT_SGIX = 0x00000040;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_ACCUM_BUFFER_BIT_SGIX = 0x00000080;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_SAMPLE_BUFFERS_BIT_SGIX = 0x00000100;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_MAX_PBUFFER_WIDTH_SGIX = 0x8016;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_MAX_PBUFFER_HEIGHT_SGIX = 0x8017;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_MAX_PBUFFER_PIXELS_SGIX = 0x8018;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_OPTIMAL_PBUFFER_WIDTH_SGIX = 0x8019;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX = 0x801A;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_PRESERVED_CONTENTS_SGIX = 0x801B;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_LARGEST_PBUFFER_SGIX = 0x801C;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_WIDTH_SGIX = 0x801D;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_HEIGHT_SGIX = 0x801E;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_EVENT_MASK_SGIX = 0x801F;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_DAMAGED_SGIX = 0x8020;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_SAVED_SGIX = 0x8021;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_WINDOW_SGIX = 0x8022;
  /** Part of <code>GLX_SGIX_pbuffer</code> */
  public static final int GLX_PBUFFER_SGIX = 0x8023;
  /** Part of <code>GLX_SGIX_video_resize</code> */
  public static final int GLX_SYNC_FRAME_SGIX = 0x00000000;
  /** Part of <code>GLX_SGIX_video_resize</code> */
  public static final int GLX_SYNC_SWAP_SGIX = 0x00000001;
  /** Part of <code>GLX_SGIX_dmbuffer</code> */
  public static final int GLX_DIGITAL_MEDIA_PBUFFER_SGIX = 0x8024;
  /** Part of <code>GLX_SGIS_blended_overlay</code> */
  public static final int GLX_BLENDED_RGBA_SGIS = 0x8025;
  /** Part of <code>GLX_SGIS_shared_multisample</code> */
  public static final int GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS = 0x8026;
  /** Part of <code>GLX_SGIS_shared_multisample</code> */
  public static final int GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS = 0x8027;
  /** Part of <code>GLX_3DFX_multisample</code> */
  public static final int GLX_SAMPLE_BUFFERS_3DFX = 0x8050;
  /** Part of <code>GLX_3DFX_multisample</code> */
  public static final int GLX_SAMPLES_3DFX = 0x8051;
  /** Part of <code>GLX_MESA_set_3dfx_mode</code> */
  public static final int GLX_3DFX_WINDOW_MODE_MESA = 0x1;
  /** Part of <code>GLX_MESA_set_3dfx_mode</code> */
  public static final int GLX_3DFX_FULLSCREEN_MODE_MESA = 0x2;
  /** Part of <code>GLX_SGIX_visual_select_group</code> */
  public static final int GLX_VISUAL_SELECT_GROUP_SGIX = 0x8028;
  /** Part of <code>GLX_NV_float_buffer</code> */
  public static final int GLX_FLOAT_COMPONENTS_NV = 0x20B0;
  /** Part of <code>GLX_SGIX_hyperpipe</code> */
  public static final int GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX = 80;
  /** Part of <code>GLX_SGIX_hyperpipe</code> */
  public static final int GLX_BAD_HYPERPIPE_CONFIG_SGIX = 91;
  /** Part of <code>GLX_SGIX_hyperpipe</code> */
  public static final int GLX_BAD_HYPERPIPE_SGIX = 92;
  /** Part of <code>GLX_SGIX_hyperpipe</code> */
  public static final int GLX_HYPERPIPE_DISPLAY_PIPE_SGIX = 0x00000001;
  /** Part of <code>GLX_SGIX_hyperpipe</code> */
  public static final int GLX_HYPERPIPE_RENDER_PIPE_SGIX = 0x00000002;
  /** Part of <code>GLX_SGIX_hyperpipe</code> */
  public static final int GLX_PIPE_RECT_SGIX = 0x00000001;
  /** Part of <code>GLX_SGIX_hyperpipe</code> */
  public static final int GLX_PIPE_RECT_LIMITS_SGIX = 0x00000002;
  /** Part of <code>GLX_SGIX_hyperpipe</code> */
  public static final int GLX_HYPERPIPE_STEREO_SGIX = 0x00000003;
  /** Part of <code>GLX_SGIX_hyperpipe</code> */
  public static final int GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX = 0x00000004;
  /** Part of <code>GLX_SGIX_hyperpipe</code> */
  public static final int GLX_HYPERPIPE_ID_SGIX = 0x8030;
  /** Part of <code>GLX_NV_video_out</code> */
  public static final int GLX_VIDEO_OUT_COLOR_NV = 0x20C3;
  /** Part of <code>GLX_NV_video_out</code> */
  public static final int GLX_VIDEO_OUT_ALPHA_NV = 0x20C4;
  /** Part of <code>GLX_NV_video_out</code> */
  public static final int GLX_VIDEO_OUT_DEPTH_NV = 0x20C5;
  /** Part of <code>GLX_NV_video_out</code> */
  public static final int GLX_VIDEO_OUT_COLOR_AND_ALPHA_NV = 0x20C6;
  /** Part of <code>GLX_NV_video_out</code> */
  public static final int GLX_VIDEO_OUT_COLOR_AND_DEPTH_NV = 0x20C7;
  /** Part of <code>GLX_NV_video_out</code> */
  public static final int GLX_VIDEO_OUT_FRAME_NV = 0x20C8;
  /** Part of <code>GLX_NV_video_out</code> */
  public static final int GLX_VIDEO_OUT_FIELD_1_NV = 0x20C9;
  /** Part of <code>GLX_NV_video_out</code> */
  public static final int GLX_VIDEO_OUT_FIELD_2_NV = 0x20CA;
  /** Part of <code>GLX_NV_video_out</code> */
  public static final int GLX_VIDEO_OUT_STACKED_FIELDS_1_2_NV = 0x20CB;
  /** Part of <code>GLX_NV_video_out</code> */
  public static final int GLX_VIDEO_OUT_STACKED_FIELDS_2_1_NV = 0x20CC;
  /** Part of <code>GLX_NV_multisample_coverage</code> */
  public static final int GLX_COVERAGE_SAMPLES_NV = 100001;
  /** Part of <code>GLX_NV_multisample_coverage</code> */
  public static final int GLX_COLOR_SAMPLES_NV = 0x20B3;

  /** Entry point to C language function: <code> GLvoid *  glXAllocateMemoryNV(GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority); </code> <br>Part of <code>GLX_NV_vertex_array_range</code>   */
  public ByteBuffer glXAllocateMemoryNV(int size, float readfreq, float writefreq, float priority);

  /** Entry point to C language function: <code> int glXBindChannelToWindowSGIX(Display * , int, int, XID); </code> <br>Part of <code>GLX_SGIX_video_resize</code>   */
  public int glXBindChannelToWindowSGIX(long arg0, int arg1, int arg2, long arg3);

  /** Entry point to C language function: <code> Bool glXBindSwapBarrierNV(Display *  dpy, GLuint group, GLuint barrier); </code> <br>Part of <code>GLX_NV_swap_group</code>   */
  public boolean glXBindSwapBarrierNV(long dpy, int group, int barrier);

  /** Entry point to C language function: <code> void glXBindSwapBarrierSGIX(Display * , XID, int); </code> <br>Part of <code>GLX_SGIX_swap_barrier</code>   */
  public void glXBindSwapBarrierSGIX(long arg0, long arg1, int arg2);

  /** Entry point to C language function: <code> int glXBindVideoDeviceNV(Display *  dpy, unsigned int video_slot, unsigned int video_device, const int *  attrib_list); </code> <br>Part of <code>GLX_NV_present_video</code>
      @param attrib_list a direct only {@link java.nio.IntBuffer}   */
  public int glXBindVideoDeviceNV(long dpy, int video_slot, int video_device, IntBuffer attrib_list);

  /** Entry point to C language function: <code> int glXBindVideoImageNV(Display *  dpy, GLXVideoDeviceNV VideoDevice, XID pbuf, int iVideoBuffer); </code> <br>Part of <code>GLX_NV_video_out</code>   */
  public int glXBindVideoImageNV(long dpy, int VideoDevice, long pbuf, int iVideoBuffer);

  /** Entry point to C language function: <code> int glXChannelRectSGIX(Display * , int, int, int, int, int, int); </code> <br>Part of <code>GLX_SGIX_video_resize</code>   */
  public int glXChannelRectSGIX(long arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6);

  /** Entry point to C language function: <code> int glXChannelRectSyncSGIX(Display * , int, int, GLenum); </code> <br>Part of <code>GLX_SGIX_video_resize</code>   */
  public int glXChannelRectSyncSGIX(long arg0, int arg1, int arg2, int arg3);

  /** Entry point to C language function: <code> void glXCopySubBufferMESA(Display * , XID, int, int, int, int); </code> <br>Part of <code>GLX_MESA_copy_sub_buffer</code>   */
  public void glXCopySubBufferMESA(long arg0, long arg1, int arg2, int arg3, int arg4, int arg5);

  /** Entry point to C language function: <code> GLXContext glXCreateContextAttribsARB(Display * , GLXFBConfig, GLXContext, Bool, const int * ); </code> <br>Part of <code>GLX_ARB_create_context</code>
      @param arg4 a direct only {@link java.nio.IntBuffer}   */
  public long glXCreateContextAttribsARB(long arg0, long arg1, long arg2, boolean arg3, IntBuffer arg4);

  /** Entry point to C language function: <code> void glXCushionSGI(Display * , XID, float); </code> <br>Part of <code>GLX_SGI_cushion</code>   */
  public void glXCushionSGI(long arg0, long arg1, float arg2);

  /** Entry point to C language function: <code> unsigned int *  glXEnumerateVideoDevicesNV(Display *  dpy, int screen, int *  nelements); </code> <br>Part of <code>GLX_NV_present_video</code>
      @param nelements a direct only {@link java.nio.IntBuffer}   */
  public IntBuffer glXEnumerateVideoDevicesNV(long dpy, int screen, IntBuffer nelements);

  /** Entry point to C language function: <code> void glXFreeContextEXT(Display * , GLXContext); </code> <br>Part of <code>GLX_EXT_import_context</code>   */
  public void glXFreeContextEXT(long arg0, long arg1);

  /** Entry point to C language function: <code> void glXFreeMemoryNV(GLvoid *  pointer); </code> <br>Part of <code>GLX_NV_vertex_array_range</code>
      @param pointer a direct only {@link java.nio.Buffer}   */
  public void glXFreeMemoryNV(Buffer pointer);

  /** Entry point to C language function: <code> unsigned int glXGetAGPOffsetMESA(const void * ); </code> <br>Part of <code>GLX_MESA_agp_offset</code>
      @param arg0 a direct only {@link java.nio.Buffer}   */
  public int glXGetAGPOffsetMESA(Buffer arg0);

  /** Entry point to C language function: <code> XID glXGetContextIDEXT(GLXContext); </code> <br>Part of <code>GLX_EXT_import_context</code>   */
  public long glXGetContextIDEXT(long arg0);

  /** Entry point to C language function: <code> Display *  glXGetCurrentDisplayEXT(void); </code> <br>Part of <code>GLX_EXT_import_context</code>   */
  public long glXGetCurrentDisplayEXT();

  /** Entry point to C language function: <code> XID glXGetCurrentReadDrawableSGI(void); </code> <br>Part of <code>GLX_SGI_make_current_read</code>   */
  public long glXGetCurrentReadDrawableSGI();

  /** Entry point to C language function: <code> int glXGetRefreshRateSGI(unsigned int * ); </code> <br>Part of <code>GLX_SGI_video_sync</code>
      @param arg0 a direct only {@link java.nio.IntBuffer}   */
  public int glXGetRefreshRateSGI(IntBuffer arg0);

  /** Entry point to C language function: <code> int glXGetSwapIntervalMESA(void); </code> <br>Part of <code>GLX_MESA_swap_control</code>   */
  public int glXGetSwapIntervalMESA();

  /** Entry point to C language function: <code> Status glXGetTransparentIndexSUN(Display * , XID, XID, long * ); </code> <br>Part of <code>GLX_SUN_get_transparent_index</code>
      @param arg3 a direct only {@link java.nio.LongBuffer}   */
  public int glXGetTransparentIndexSUN(long arg0, long arg1, long arg2, LongBuffer arg3);

  /** Entry point to C language function: <code> int glXGetVideoDeviceNV(Display *  dpy, int screen, int numVideoDevices, GLXVideoDeviceNV *  pVideoDevice); </code> <br>Part of <code>GLX_NV_video_out</code>
      @param pVideoDevice a direct only {@link java.nio.IntBuffer}   */
  public int glXGetVideoDeviceNV(long dpy, int screen, int numVideoDevices, IntBuffer pVideoDevice);

  /** Entry point to C language function: <code> int glXGetVideoInfoNV(Display *  dpy, int screen, GLXVideoDeviceNV VideoDevice, unsigned long *  pulCounterOutputPbuffer, unsigned long *  pulCounterOutputVideo); </code> <br>Part of <code>GLX_NV_video_out</code>
      @param pulCounterOutputPbuffer a direct only {@link java.nio.LongBuffer}
      @param pulCounterOutputVideo a direct only {@link java.nio.LongBuffer}   */
  public int glXGetVideoInfoNV(long dpy, int screen, int VideoDevice, LongBuffer pulCounterOutputPbuffer, LongBuffer pulCounterOutputVideo);

  /** Entry point to C language function: <code> int glXGetVideoSyncSGI(unsigned int * ); </code> <br>Part of <code>GLX_SGI_video_sync</code>
      @param arg0 a direct only {@link java.nio.IntBuffer}   */
  public int glXGetVideoSyncSGI(IntBuffer arg0);

  /** Entry point to C language function: <code> GLXContext glXImportContextEXT(Display * , XID); </code> <br>Part of <code>GLX_EXT_import_context</code>   */
  public long glXImportContextEXT(long arg0, long arg1);

  /** Entry point to C language function: <code> Bool glXJoinSwapGroupNV(Display *  dpy, XID drawable, GLuint group); </code> <br>Part of <code>GLX_NV_swap_group</code>   */
  public boolean glXJoinSwapGroupNV(long dpy, long drawable, int group);

  /** Entry point to C language function: <code> void glXJoinSwapGroupSGIX(Display * , XID, XID); </code> <br>Part of <code>GLX_SGIX_swap_group</code>   */
  public void glXJoinSwapGroupSGIX(long arg0, long arg1, long arg2);

  /** Entry point to C language function: <code> Bool glXMakeCurrentReadSGI(Display * , XID, XID, GLXContext); </code> <br>Part of <code>GLX_SGI_make_current_read</code>   */
  public boolean glXMakeCurrentReadSGI(long arg0, long arg1, long arg2, long arg3);

  /** Entry point to C language function: <code> int glXQueryChannelDeltasSGIX(Display * , int, int, int * , int * , int * , int * ); </code> <br>Part of <code>GLX_SGIX_video_resize</code>
      @param arg3 a direct only {@link java.nio.IntBuffer}
      @param arg4 a direct only {@link java.nio.IntBuffer}
      @param arg5 a direct only {@link java.nio.IntBuffer}
      @param arg6 a direct only {@link java.nio.IntBuffer}   */
  public int glXQueryChannelDeltasSGIX(long arg0, int arg1, int arg2, IntBuffer arg3, IntBuffer arg4, IntBuffer arg5, IntBuffer arg6);

  /** Entry point to C language function: <code> int glXQueryChannelRectSGIX(Display * , int, int, int * , int * , int * , int * ); </code> <br>Part of <code>GLX_SGIX_video_resize</code>
      @param arg3 a direct only {@link java.nio.IntBuffer}
      @param arg4 a direct only {@link java.nio.IntBuffer}
      @param arg5 a direct only {@link java.nio.IntBuffer}
      @param arg6 a direct only {@link java.nio.IntBuffer}   */
  public int glXQueryChannelRectSGIX(long arg0, int arg1, int arg2, IntBuffer arg3, IntBuffer arg4, IntBuffer arg5, IntBuffer arg6);

  /** Entry point to C language function: <code> int glXQueryContextInfoEXT(Display * , GLXContext, int, int * ); </code> <br>Part of <code>GLX_EXT_import_context</code>
      @param arg3 a direct only {@link java.nio.IntBuffer}   */
  public int glXQueryContextInfoEXT(long arg0, long arg1, int arg2, IntBuffer arg3);

  /** Entry point to C language function: <code> Bool glXQueryFrameCountNV(Display *  dpy, int screen, GLuint *  count); </code> <br>Part of <code>GLX_NV_swap_group</code>
      @param count a direct only {@link java.nio.IntBuffer}   */
  public boolean glXQueryFrameCountNV(long dpy, int screen, IntBuffer count);

  /** Entry point to C language function: <code> Bool glXQueryMaxSwapBarriersSGIX(Display * , int, int * ); </code> <br>Part of <code>GLX_SGIX_swap_barrier</code>
      @param arg2 a direct only {@link java.nio.IntBuffer}   */
  public boolean glXQueryMaxSwapBarriersSGIX(long arg0, int arg1, IntBuffer arg2);

  /** Entry point to C language function: <code> Bool glXQueryMaxSwapGroupsNV(Display *  dpy, int screen, GLuint *  maxGroups, GLuint *  maxBarriers); </code> <br>Part of <code>GLX_NV_swap_group</code>
      @param maxGroups a direct only {@link java.nio.IntBuffer}
      @param maxBarriers a direct only {@link java.nio.IntBuffer}   */
  public boolean glXQueryMaxSwapGroupsNV(long dpy, int screen, IntBuffer maxGroups, IntBuffer maxBarriers);

  /** Entry point to C language function: <code> Bool glXQuerySwapGroupNV(Display *  dpy, XID drawable, GLuint *  group, GLuint *  barrier); </code> <br>Part of <code>GLX_NV_swap_group</code>
      @param group a direct only {@link java.nio.IntBuffer}
      @param barrier a direct only {@link java.nio.IntBuffer}   */
  public boolean glXQuerySwapGroupNV(long dpy, long drawable, IntBuffer group, IntBuffer barrier);

  /** Entry point to C language function: <code> Bool glXReleaseBuffersMESA(Display * , XID); </code> <br>Part of <code>GLX_MESA_release_buffers</code>   */
  public boolean glXReleaseBuffersMESA(long arg0, long arg1);

  /** Entry point to C language function: <code> int glXReleaseVideoDeviceNV(Display *  dpy, int screen, GLXVideoDeviceNV VideoDevice); </code> <br>Part of <code>GLX_NV_video_out</code>   */
  public int glXReleaseVideoDeviceNV(long dpy, int screen, int VideoDevice);

  /** Entry point to C language function: <code> int glXReleaseVideoImageNV(Display *  dpy, XID pbuf); </code> <br>Part of <code>GLX_NV_video_out</code>   */
  public int glXReleaseVideoImageNV(long dpy, long pbuf);

  /** Entry point to C language function: <code> Bool glXResetFrameCountNV(Display *  dpy, int screen); </code> <br>Part of <code>GLX_NV_swap_group</code>   */
  public boolean glXResetFrameCountNV(long dpy, int screen);

  /** Entry point to C language function: <code> int glXSendPbufferToVideoNV(Display *  dpy, XID pbuf, int iBufferType, unsigned long *  pulCounterPbuffer, GLboolean bBlock); </code> <br>Part of <code>GLX_NV_video_out</code>
      @param pulCounterPbuffer a direct only {@link java.nio.LongBuffer}   */
  public int glXSendPbufferToVideoNV(long dpy, long pbuf, int iBufferType, LongBuffer pulCounterPbuffer, boolean bBlock);

  /** Entry point to C language function: <code> Bool glXSet3DfxModeMESA(int); </code> <br>Part of <code>GLX_MESA_set_3dfx_mode</code>   */
  public boolean glXSet3DfxModeMESA(int arg0);

  /** Entry point to C language function: <code> int glXSwapIntervalMESA(unsigned int interval); </code> <br>Part of <code>GLX_MESA_swap_control</code>   */
  public int glXSwapIntervalMESA(int interval);

  /** Entry point to C language function: <code> int glXSwapIntervalSGI(int); </code> <br>Part of <code>GLX_SGI_swap_control</code>   */
  public int glXSwapIntervalSGI(int arg0);

  /** Entry point to C language function: <code> int glXWaitVideoSyncSGI(int, int, unsigned int * ); </code> <br>Part of <code>GLX_SGI_video_sync</code>
      @param arg2 a direct only {@link java.nio.IntBuffer}   */
  public int glXWaitVideoSyncSGI(int arg0, int arg1, IntBuffer arg2);


  // --- Begin CustomJavaCode .cfg declarations
      public boolean isFunctionAvailable(String glFunctionName);
      public boolean isExtensionAvailable(String glExtensionName);
  // ---- End CustomJavaCode .cfg declarations

} // end of class GLXExt
